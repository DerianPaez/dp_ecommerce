datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  sessionToken String   @unique
  expires      DateTime

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String @id @default(auto()) @map("_id") @db.ObjectId

  token   String   @unique
  expires DateTime

  @@unique([identifier, token])
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  favorites     Favorite[]
  cart          CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartId    String?  @db.ObjectId
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name        String
  description String
  price       Float
  stock       Int
  imageUrls   String[]
  categories  String[]
  Favorite    Favorite?
  CartItem    CartItem?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  quantity Int

  userId String? @db.ObjectId
  User   User?   @relation(fields: [userId], references: [id])

  productId String  @unique @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favorite {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  userId String? @db.ObjectId
  User   User?   @relation(fields: [userId], references: [id])

  productId String  @unique @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
